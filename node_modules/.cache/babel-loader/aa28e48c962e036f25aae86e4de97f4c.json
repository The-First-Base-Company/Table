{"ast":null,"code":"import _slicedToArray from \"/Users/marygarcia/Downloads/Players/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/marygarcia/Downloads/Players/src/components/tablePlayersStats.jsx\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nconst columns = [{\n  id: \"name\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Name\"),\n  minWidth: 30,\n  align: \"center\"\n}, {\n  id: \"team\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Team\"),\n  minWidth: 18,\n  align: \"center\"\n}, {\n  id: \"pos\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Position\"),\n  minWidth: 15,\n  align: \"center\"\n}, {\n  id: \"type\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Type\"),\n  minWidth: 18,\n  align: \"center\"\n}, {\n  id: \"numGames\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"# of Games\"),\n  minWidth: 18,\n  align: \"center\"\n}, {\n  id: \"avgHits\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Avg Hits\"),\n  minWidth: 18,\n  align: \"center\"\n}, {\n  id: \"atBat\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"# At Bat\"),\n  minWidth: 18,\n  align: \"center\"\n}, {\n  id: \"runs\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Runs\"),\n  minWidth: 18,\n  align: \"center\"\n}, {\n  id: \"hits\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Hits\"),\n  minWidth: 18,\n  align: \"center\"\n}, {\n  id: \"hr\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Home Runs\"),\n  minWidth: 18,\n  align: \"center\"\n}, {\n  id: \"wins\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Wins\"),\n  minWidth: 18,\n  align: \"center\"\n}, {\n  id: \"losses\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Losses\"),\n  minWidth: 18,\n  align: \"center\"\n}, {\n  id: \"opt\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Opportunities\"),\n  minWidth: 18,\n  align: \"center\"\n}, {\n  id: \"putOut\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Put Out\"),\n  minWidth: 18,\n  align: \"center\"\n}, {\n  id: \"assist\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Assistances\"),\n  minWidth: 18,\n  align: \"center\"\n}, {\n  id: \"errors\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Errores\"),\n  minWidth: 18,\n  align: \"center\"\n}, {\n  id: \"avgErrors\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Avg Errors\"),\n  minWidth: 18,\n  align: \"center\"\n}];\n\nfunction insertData(name, team, pos, type, numGames, avgHits, atBat, runs, hits, hr, wins, losses, opt, putOut, assist, errors, avgErrors) {\n  return {\n    name,\n    team,\n    pos,\n    type,\n    numGames,\n    avgHits,\n    atBat,\n    runs,\n    hits,\n    hr,\n    wins,\n    losses,\n    opt,\n    putOut,\n    assist,\n    errors,\n    avgErrors\n  };\n}\n\nconst rows = [insertData(\"Benintendi, A\", \"BOS\", \"LF\", \"Filding, Hitting\", \"148\", \"0.29\", \"579\", \"103\", \"168\", \"16\", \"NULL\", \"NULL\", \"215\", \"201\", \"11\", \"3\", \"0.986\"), insertData(\"Bregman, A\", \"HOU\", \"3B\", \"Filding, Hitting\", \"157\", \"0.286\", \"594\", \"105\", \"170\", \"31\", \"NULL\", \"NULL\", \"342\", \"84\", \"245\", \"13\", \"0.962\"), insertData(\"Cabrera, A\", \"PHI\", \"2B\", \"Hitting\", \"147\", \"0.262\", \"546\", \"68\", \"143\", \"23\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\"), insertData(\"Escobar, A\", \"KC\", \"SS\", \"Hitting\", \"140\", \"0.231\", \"485\", \"54\", \"112\", \"4\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\"), insertData(\"Gordon, A\", \"KC\", \"LF\", \"Filding, Hitting\", \"141\", \"0.245\", \"506\", \"56\", \"124\", \"13\", \"NULL\", \"NULL\", \"260\", \"249\", \"9\", \"2\", \"0.992\"), insertData(\"Heaney, A\", \"LAA\", \"P\", \"Pitching\", \"30\", \"0.248\", \"NULL\", \"91\", \"171\", \"27\", \"9\", \"10\", \"31\", \"8\", \"22\", \"1\", \"0.968\"), insertData(\"Hicks, A\", \"NYY\", \"CF\", \"Filding, Hitting\", \"137\", \"0.248\", \"480\", \"90\", \"119\", \"27\", \"NULL\", \"NULL\", \"272\", \"268\", \"2\", \"2\", \"0.993\"), insertData(\"Jones, A\", \"BAL\", \"CF\", \"Hitting\", \"145\", \"0.281\", \"580\", \"54\", \"163\", \"15\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\"), insertData(\"McCutchen, A\", \"NYY\", \"RF\", \"Filding, Hitting\", \"155\", \"0.255\", \"569\", \"83\", \"145\", \"20\", \"NULL\", \"NULL\", \"272\", \"262\", \"8\", \"2\", \"0.993\"), insertData(\"Nola, A\", \"PHI\", \"P\", \"Pitching\", \"33\", \"0.197\", \"NULL\", \"57\", \"149\", \"17\", \"17\", \"6\", \"36\", \"9\", \"26\", \"1\", \"0.972\")];\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\"\n  },\n  tableWrapper: {\n    maxHeigth: 500,\n    overflow: \"auto\"\n  }\n});\nexport default function StickyHeadTable() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        page = _React$useState2[0],\n        setPage = _React$useState2[1];\n\n  const _React$useState3 = React.useState(25),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        rowsPerPage = _React$useState4[0],\n        setRowsPerPage = _React$useState4[1];\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.tableWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }, React.createElement(Table, {\n    tableTopFive: true,\n    responsive: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }, columns.map(column => React.createElement(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }, column.label)))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n    return React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, columns.map(column => {\n      const value = row[column.id];\n      return React.createElement(TableCell, {\n        key: column.id,\n        align: column.align,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, column.format && typeof value == \"number\" ? column.format(value) : value);\n    }));\n  })))), React.createElement(TablePagination, {\n    rowsPerPageOptions: [25, 50, 100, 150, 200],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    backIconButtonProps: {\n      \"aria-label\": \"previous page\"\n    },\n    nextIconButtonProps: {\n      \"aria-label\": \"next page\"\n    },\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/marygarcia/Downloads/Players/src/components/tablePlayersStats.jsx"],"names":["React","makeStyles","Paper","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","columns","id","label","minWidth","align","insertData","name","team","pos","type","numGames","avgHits","atBat","runs","hits","hr","wins","losses","opt","putOut","assist","errors","avgErrors","rows","useStyles","root","width","tableWrapper","maxHeigth","overflow","StickyHeadTable","classes","useState","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","map","column","slice","row","code","format","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst columns = [\n  { id: \"name\", label: <h6>Name</h6>, minWidth: 30, align: \"center\" },\n  { id: \"team\", label: <h6>Team</h6>, minWidth: 18, align: \"center\" },\n  { id: \"pos\", label: <h6>Position</h6>, minWidth: 15, align: \"center\" },\n  { id: \"type\", label: <h6>Type</h6>, minWidth: 18, align: \"center\" },\n  { id: \"numGames\", label: <h6># of Games</h6>, minWidth: 18, align: \"center\" },\n  { id: \"avgHits\", label: <h6>Avg Hits</h6>, minWidth: 18, align: \"center\" },\n  { id: \"atBat\", label: <h6># At Bat</h6>, minWidth: 18, align: \"center\" },\n  { id: \"runs\", label: <h6>Runs</h6>, minWidth: 18, align: \"center\" },\n  { id: \"hits\", label: <h6>Hits</h6>, minWidth: 18, align: \"center\" },\n  { id: \"hr\", label: <h6>Home Runs</h6>, minWidth: 18, align: \"center\" },\n  { id: \"wins\", label: <h6>Wins</h6>, minWidth: 18, align: \"center\" },\n  { id: \"losses\", label: <h6>Losses</h6>, minWidth: 18, align: \"center\" },\n  { id: \"opt\", label: <h6>Opportunities</h6>, minWidth: 18, align: \"center\" },\n  { id: \"putOut\", label: <h6>Put Out</h6>, minWidth: 18, align: \"center\" },\n  { id: \"assist\", label: <h6>Assistances</h6>, minWidth: 18, align: \"center\" },\n  { id: \"errors\", label: <h6>Errores</h6>, minWidth: 18, align: \"center\" },\n  { id: \"avgErrors\", label: <h6>Avg Errors</h6>, minWidth: 18, align: \"center\" }\n];\n\nfunction insertData(\n  name,\n  team,\n  pos,\n  type,\n  numGames,\n  avgHits,\n  atBat,\n  runs,\n  hits,\n  hr,\n  wins,\n  losses,\n  opt,\n  putOut,\n  assist,\n  errors,\n  avgErrors\n) {\n  return {\n    name,\n    team,\n    pos,\n    type,\n    numGames,\n    avgHits,\n    atBat,\n    runs,\n    hits,\n    hr,\n    wins,\n    losses,\n    opt,\n    putOut,\n    assist,\n    errors,\n    avgErrors\n  };\n}\n\nconst rows = [\n  insertData(\n    \"Benintendi, A\",\n    \"BOS\",\n    \"LF\",\n    \"Filding, Hitting\",\n    \"148\",\n    \"0.29\",\n    \"579\",\n    \"103\",\n    \"168\",\n    \"16\",\n    \"NULL\",\n    \"NULL\",\n    \"215\",\n    \"201\",\n    \"11\",\n    \"3\",\n    \"0.986\"\n  ),\n  insertData(\n    \"Bregman, A\",\n    \"HOU\",\n    \"3B\",\n    \"Filding, Hitting\",\n    \"157\",\n    \"0.286\",\n    \"594\",\n    \"105\",\n    \"170\",\n    \"31\",\n    \"NULL\",\n    \"NULL\",\n    \"342\",\n    \"84\",\n    \"245\",\n    \"13\",\n    \"0.962\"\n  ),\n  insertData(\n    \"Cabrera, A\",\n    \"PHI\",\n    \"2B\",\n    \"Hitting\",\n    \"147\",\n    \"0.262\",\n    \"546\",\n    \"68\",\n    \"143\",\n    \"23\",\n    \"NULL\",\n    \"NULL\",\n    \"NULL\",\n    \"NULL\",\n    \"NULL\",\n    \"NULL\",\n    \"NULL\"\n  ),\n  insertData(\n    \"Escobar, A\",\n    \"KC\",\n    \"SS\",\n    \"Hitting\",\n    \"140\",\n    \"0.231\",\n    \"485\",\n    \"54\",\n    \"112\",\n    \"4\",\n    \"NULL\",\n    \"NULL\",\n    \"NULL\",\n    \"NULL\",\n    \"NULL\",\n    \"NULL\",\n    \"NULL\"\n  ),\n  insertData(\n    \"Gordon, A\",\n    \"KC\",\n    \"LF\",\n    \"Filding, Hitting\",\n    \"141\",\n    \"0.245\",\n    \"506\",\n    \"56\",\n    \"124\",\n    \"13\",\n    \"NULL\",\n    \"NULL\",\n    \"260\",\n    \"249\",\n    \"9\",\n    \"2\",\n    \"0.992\"\n  ),\n  insertData(\n    \"Heaney, A\",\n    \"LAA\",\n    \"P\",\n    \"Pitching\",\n    \"30\",\n    \"0.248\",\n    \"NULL\",\n    \"91\",\n    \"171\",\n    \"27\",\n    \"9\",\n    \"10\",\n    \"31\",\n    \"8\",\n    \"22\",\n    \"1\",\n    \"0.968\"\n  ),\n  insertData(\n    \"Hicks, A\",\n    \"NYY\",\n    \"CF\",\n    \"Filding, Hitting\",\n    \"137\",\n    \"0.248\",\n    \"480\",\n    \"90\",\n    \"119\",\n    \"27\",\n    \"NULL\",\n    \"NULL\",\n    \"272\",\n    \"268\",\n    \"2\",\n    \"2\",\n    \"0.993\"\n  ),\n  insertData(\n    \"Jones, A\",\n    \"BAL\",\n    \"CF\",\n    \"Hitting\",\n    \"145\",\n    \"0.281\",\n    \"580\",\n    \"54\",\n    \"163\",\n    \"15\",\n    \"NULL\",\n    \"NULL\",\n    \"NULL\",\n    \"NULL\",\n    \"NULL\",\n    \"NULL\",\n    \"NULL\"\n  ),\n  insertData(\n    \"McCutchen, A\",\n    \"NYY\",\n    \"RF\",\n    \"Filding, Hitting\",\n    \"155\",\n    \"0.255\",\n    \"569\",\n    \"83\",\n    \"145\",\n    \"20\",\n    \"NULL\",\n    \"NULL\",\n    \"272\",\n    \"262\",\n    \"8\",\n    \"2\",\n    \"0.993\"\n  ),\n  insertData(\n    \"Nola, A\",\n    \"PHI\",\n    \"P\",\n    \"Pitching\",\n    \"33\",\n    \"0.197\",\n    \"NULL\",\n    \"57\",\n    \"149\",\n    \"17\",\n    \"17\",\n    \"6\",\n    \"36\",\n    \"9\",\n    \"26\",\n    \"1\",\n    \"0.972\"\n  )\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\"\n  },\n  tableWrapper: {\n    maxHeigth: 500,\n    overflow: \"auto\"\n  }\n});\n\nexport default function StickyHeadTable() {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(25);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table tableTopFive responsive>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map(row => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                    {columns.map(column => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value == \"number\"\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </div>\n      <TablePagination\n        rowsPerPageOptions={[25, 50, 100, 150, 200]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        backIconButtonProps={{\n          \"aria-label\": \"previous page\"\n        }}\n        nextIconButtonProps={{\n          \"aria-label\": \"next page\"\n        }}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}