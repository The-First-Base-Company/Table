{"ast":null,"code":"import _slicedToArray from \"/Users/marygarcia/Downloads/Players/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/marygarcia/Downloads/Players/src/components/tableTeamsStats.jsx\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nconst columns = [{\n  id: \"team\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Team\"),\n  minWidth: 30,\n  align: \"center\"\n}, {\n  id: \"abbrev\",\n  label: \"\",\n  minWidth: 15,\n  align: \"center\"\n}, {\n  id: \"league\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"League\"),\n  minWidth: 10,\n  align: \"center\"\n}, {\n  id: \"rankh\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Rank Hitting\"),\n  minWidth: 15,\n  align: \"center\"\n}, {\n  id: \"rankp\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Rank Pitching\"),\n  minWidth: 15,\n  align: \"center\"\n}, {\n  id: \"rankf\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Rank Filding\"),\n  minWidth: 15,\n  align: \"center\"\n}, {\n  id: \"numGames\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"# of Games\"),\n  minWidth: 15,\n  align: \"center\"\n}, {\n  id: \"avgHits\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Avg Hits\"),\n  minWidth: 15,\n  align: \"center\"\n}, {\n  id: \"atBat\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"# At Bat\"),\n  minWidth: 15,\n  align: \"center\"\n}, {\n  id: \"runs\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Runs\"),\n  minWidth: 15,\n  align: \"center\"\n}, {\n  id: \"hits\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Hits\"),\n  minWidth: 15,\n  align: \"center\"\n}, {\n  id: \"hr\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Home Runs\"),\n  minWidth: 15,\n  align: \"center\"\n}, {\n  id: \"runsal\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Runs Allowed\"),\n  minWidth: 15,\n  align: \"center\"\n}, {\n  id: \"hitsal\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Hits Allowed\"),\n  minWidth: 15,\n  align: \"center\"\n}, {\n  id: \"hral\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Home Runs Allowed\"),\n  minWidth: 18,\n  align: \"center\"\n}, {\n  id: \"avghitsal\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Average Hits Allowed\"),\n  minWidth: 18,\n  align: \"center\"\n}, {\n  id: \"wins\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Wins\"),\n  minWidth: 18,\n  align: \"center\"\n}, {\n  id: \"losses\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Losses\"),\n  minWidth: 18,\n  align: \"center\"\n}, {\n  id: \"opt\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Opportunities\"),\n  minWidth: 18,\n  align: \"center\"\n}, {\n  id: \"putOut\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Put Outs\"),\n  minWidth: 18,\n  align: \"center\"\n}, {\n  id: \"assist\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Assistances\"),\n  minWidth: 18,\n  align: \"center\"\n}, {\n  id: \"errors\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Errores\"),\n  minWidth: 18,\n  align: \"center\"\n}, {\n  id: \"avgErrors\",\n  label: React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Avg Errors\"),\n  minWidth: 18,\n  align: \"center\"\n}];\n\nfunction insertData(team, abbrev, league, numGames, rankh, rankp, rankf, avgHits, atBat, runs, hits, hr, runsal, hitsal, hral, avghitsal, wins, losses, opt, putOut, assist, errors, avgErrors) {\n  return {\n    team,\n    abbrev,\n    league,\n    numGames,\n    rankh,\n    rankp,\n    rankf,\n    avgHits,\n    atBat,\n    runs,\n    hits,\n    hr,\n    runsal,\n    hitsal,\n    hral,\n    avghitsal,\n    wins,\n    losses,\n    opt,\n    putOut,\n    assist,\n    errors,\n    avgErrors\n  };\n}\n\nconst rows = [insertData(\"Arizona Diamondbacks\", \"ARI\", \"National League\", \"4\", \"9\", \"3\", \"162\", \"0.235\", \"5460\", \"693\", \"1283\", \"176\", \"644\", \"1313\", \"174\", \"0.239\", \"82\", \"80\", \"6150\", \"4389\", \"1686\", \"75\", \"0.988\"), insertData(\"Atlanta Braves\", \"ATL\", \"National League\", \"26\", \"2\", \"8\", \"162\", \"0.257\", \"5582\", \"759\", \"1433\", \"175\", \"657\", \"1236\", \"153\", \"0.229\", \"90\", \"72\", \"5889\", \"4370\", \"1439\", \"80\", \"0.986\"), insertData(\"Baltimore Orioles\", \"BAL\", \"American League\", \"7\", \"30\", \"24\", \"162\", \"0.239\", \"5507\", \"622\", \"1317\", \"188\", \"892\", \"1552\", \"234\", \"0.276\", \"47\", \"115\", \"5934\", \"4293\", \"1537\", \"104\", \"0.982\"), insertData(\"Boston Red Sox\", \"BOS\", \"American League\", \"30\", \"8\", \"7\", \"162\", \"0.268\", \"5623\", \"876\", \"1509\", \"208\", \"647\", \"1305\", \"176\", \"0.237\", \"108\", \"54\", \"5819\", \"4376\", \"1366\", \"77\", \"0.987\"), insertData(\"Chicago Cubs\", \"CHC\", \"National League\", \"27\", \"10\", \"21\", \"163\", \"0.258\", \"5624\", \"761\", \"1453\", \"167\", \"645\", \"1319\", \"157\", \"0.24\", \"95\", \"68\", \"6208\", \"4429\", \"1675\", \"104\", \"0.983\"), insertData(\"Chicago White Sox\", \"CWS\", \"American League\", \"9\", \"22\", \"27\", \"162\", \"0.241\", \"5523\", \"656\", \"1332\", \"182\", \"848\", \"1404\", \"196\", \"0.254\", \"62\", \"100\", \"5856\", \"4311\", \"1431\", \"114\", \"0.981\"), insertData(\"Cincinatti Red\", \"CIN\", \"National League\", \"21\", \"27\", \"15\", \"162\", \"0.254\", \"5532\", \"696\", \"1404\", \"172\", \"819\", \"1491\", \"228\", \"0.266\", \"67\", \"95\", \"6026\", \"4323\", \"1608\", \"95\", \"0.984\"), insertData(\"Cleveland Indians\", \"CLE\", \"American League\", \"29\", \"12\", \"10\", \"162\", \"0.259\", \"5595\", \"818\", \"1447\", \"216\", \"648\", \"1349\", \"200\", \"0.242\", \"91\", \"71\", \"5808\", \"44372\", \"1353\", \"83\", \"0.986\"), insertData(\"Colorado Rockies\", \"COL\", \"National League\", \"25\", \"17\", \"4\", \"163\", \"0.256\", \"5541\", \"780\", \"1418\", \"210\", \"745\", \"1377\", \"184\", \"0.25\", \"91\", \"72\", \"6055\", \"4357\", \"1621\", \"74\", \"0.988\"), insertData(\"Houston Astros\", \"HOU\", \"American League\", \"24\", \"1\", \"1\", \"162\", \"0.255\", \"5453\", \"797\", \"1390\", \"205\", \"534\", \"1164\", \"152\", \"0.217\", \"103\", \"59\", \"5797\", \"4365\", \"1369\", \"63\", \"0.989\")];\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\"\n  },\n  tableWrapper: {\n    maxHeigth: 500,\n    overflow: \"auto\"\n  }\n});\nexport default function StickyHeadTable() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        page = _React$useState2[0],\n        setPage = _React$useState2[1];\n\n  const _React$useState3 = React.useState(5),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        rowsPerPage = _React$useState4[0],\n        setRowsPerPage = _React$useState4[1];\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.tableWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378\n    },\n    __self: this\n  }, React.createElement(Table, {\n    tableTopFive: true,\n    responsive: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381\n    },\n    __self: this\n  }, columns.map(column => React.createElement(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383\n    },\n    __self: this\n  }, column.label)))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393\n    },\n    __self: this\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n    return React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, columns.map(column => {\n      const value = row[column.id];\n      return React.createElement(TableCell, {\n        key: column.id,\n        align: column.align,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, column.format && typeof value == \"number\" ? column.format(value) : value);\n    }));\n  })))), React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 15, 20, 25, 30],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    backIconButtonProps: {\n      \"aria-label\": \"previous page\"\n    },\n    nextIconButtonProps: {\n      \"aria-label\": \"next page\"\n    },\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/marygarcia/Downloads/Players/src/components/tableTeamsStats.jsx"],"names":["React","makeStyles","Paper","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","columns","id","label","minWidth","align","insertData","team","abbrev","league","numGames","rankh","rankp","rankf","avgHits","atBat","runs","hits","hr","runsal","hitsal","hral","avghitsal","wins","losses","opt","putOut","assist","errors","avgErrors","rows","useStyles","root","width","tableWrapper","maxHeigth","overflow","StickyHeadTable","classes","useState","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","map","column","slice","row","code","format","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst columns = [\n  { id: \"team\", label: <h6>Team</h6>, minWidth: 30, align: \"center\" },\n  { id: \"abbrev\", label: \"\", minWidth: 15, align: \"center\" },\n  { id: \"league\", label: <h6>League</h6>, minWidth: 10, align: \"center\" },\n  { id: \"rankh\", label: <h6>Rank Hitting</h6>, minWidth: 15, align: \"center\" },\n  { id: \"rankp\", label: <h6>Rank Pitching</h6>, minWidth: 15, align: \"center\" },\n  { id: \"rankf\", label: <h6>Rank Filding</h6>, minWidth: 15, align: \"center\" },\n  { id: \"numGames\", label: <h6># of Games</h6>, minWidth: 15, align: \"center\" },\n  { id: \"avgHits\", label: <h6>Avg Hits</h6>, minWidth: 15, align: \"center\" },\n  { id: \"atBat\", label: <h6># At Bat</h6>, minWidth: 15, align: \"center\" },\n  { id: \"runs\", label: <h6>Runs</h6>, minWidth: 15, align: \"center\" },\n  { id: \"hits\", label: <h6>Hits</h6>, minWidth: 15, align: \"center\" },\n  { id: \"hr\", label: <h6>Home Runs</h6>, minWidth: 15, align: \"center\" },\n  { id: \"runsal\", label: <h6>Runs Allowed</h6>, minWidth: 15, align: \"center\" },\n  { id: \"hitsal\", label: <h6>Hits Allowed</h6>, minWidth: 15, align: \"center\" },\n  {\n    id: \"hral\",\n    label: <h6>Home Runs Allowed</h6>,\n    minWidth: 18,\n    align: \"center\"\n  },\n  {\n    id: \"avghitsal\",\n    label: <h6>Average Hits Allowed</h6>,\n    minWidth: 18,\n    align: \"center\"\n  },\n  { id: \"wins\", label: <h6>Wins</h6>, minWidth: 18, align: \"center\" },\n  { id: \"losses\", label: <h6>Losses</h6>, minWidth: 18, align: \"center\" },\n  { id: \"opt\", label: <h6>Opportunities</h6>, minWidth: 18, align: \"center\" },\n  { id: \"putOut\", label: <h6>Put Outs</h6>, minWidth: 18, align: \"center\" },\n  { id: \"assist\", label: <h6>Assistances</h6>, minWidth: 18, align: \"center\" },\n  { id: \"errors\", label: <h6>Errores</h6>, minWidth: 18, align: \"center\" },\n  { id: \"avgErrors\", label: <h6>Avg Errors</h6>, minWidth: 18, align: \"center\" }\n];\n\nfunction insertData(\n  team,\n  abbrev,\n  league,\n  numGames,\n  rankh,\n  rankp,\n  rankf,\n  avgHits,\n  atBat,\n  runs,\n  hits,\n  hr,\n  runsal,\n  hitsal,\n  hral,\n  avghitsal,\n  wins,\n  losses,\n  opt,\n  putOut,\n  assist,\n  errors,\n  avgErrors\n) {\n  return {\n    team,\n    abbrev,\n    league,\n    numGames,\n    rankh,\n    rankp,\n    rankf,\n    avgHits,\n    atBat,\n    runs,\n    hits,\n    hr,\n    runsal,\n    hitsal,\n    hral,\n    avghitsal,\n    wins,\n    losses,\n    opt,\n    putOut,\n    assist,\n    errors,\n    avgErrors\n  };\n}\n\nconst rows = [\n  insertData(\n    \"Arizona Diamondbacks\",\n    \"ARI\",\n    \"National League\",\n    \"4\",\n    \"9\",\n    \"3\",\n    \"162\",\n    \"0.235\",\n    \"5460\",\n    \"693\",\n    \"1283\",\n    \"176\",\n    \"644\",\n    \"1313\",\n    \"174\",\n    \"0.239\",\n    \"82\",\n    \"80\",\n    \"6150\",\n    \"4389\",\n    \"1686\",\n    \"75\",\n    \"0.988\"\n  ),\n  insertData(\n    \"Atlanta Braves\",\n    \"ATL\",\n    \"National League\",\n    \"26\",\n    \"2\",\n    \"8\",\n    \"162\",\n    \"0.257\",\n    \"5582\",\n    \"759\",\n    \"1433\",\n    \"175\",\n    \"657\",\n    \"1236\",\n    \"153\",\n    \"0.229\",\n    \"90\",\n    \"72\",\n    \"5889\",\n    \"4370\",\n    \"1439\",\n    \"80\",\n    \"0.986\"\n  ),\n  insertData(\n    \"Baltimore Orioles\",\n    \"BAL\",\n    \"American League\",\n    \"7\",\n    \"30\",\n    \"24\",\n    \"162\",\n    \"0.239\",\n    \"5507\",\n    \"622\",\n    \"1317\",\n    \"188\",\n    \"892\",\n    \"1552\",\n    \"234\",\n    \"0.276\",\n    \"47\",\n    \"115\",\n    \"5934\",\n    \"4293\",\n    \"1537\",\n    \"104\",\n    \"0.982\"\n  ),\n  insertData(\n    \"Boston Red Sox\",\n    \"BOS\",\n    \"American League\",\n    \"30\",\n    \"8\",\n    \"7\",\n    \"162\",\n    \"0.268\",\n    \"5623\",\n    \"876\",\n    \"1509\",\n    \"208\",\n    \"647\",\n    \"1305\",\n    \"176\",\n    \"0.237\",\n    \"108\",\n    \"54\",\n    \"5819\",\n    \"4376\",\n    \"1366\",\n    \"77\",\n    \"0.987\"\n  ),\n  insertData(\n    \"Chicago Cubs\",\n    \"CHC\",\n    \"National League\",\n    \"27\",\n    \"10\",\n    \"21\",\n    \"163\",\n    \"0.258\",\n    \"5624\",\n    \"761\",\n    \"1453\",\n    \"167\",\n    \"645\",\n    \"1319\",\n    \"157\",\n    \"0.24\",\n    \"95\",\n    \"68\",\n    \"6208\",\n    \"4429\",\n    \"1675\",\n    \"104\",\n    \"0.983\"\n  ),\n  insertData(\n    \"Chicago White Sox\",\n    \"CWS\",\n    \"American League\",\n    \"9\",\n    \"22\",\n    \"27\",\n    \"162\",\n    \"0.241\",\n    \"5523\",\n    \"656\",\n    \"1332\",\n    \"182\",\n    \"848\",\n    \"1404\",\n    \"196\",\n    \"0.254\",\n    \"62\",\n    \"100\",\n    \"5856\",\n    \"4311\",\n    \"1431\",\n    \"114\",\n    \"0.981\"\n  ),\n  insertData(\n    \"Cincinatti Red\",\n    \"CIN\",\n    \"National League\",\n    \"21\",\n    \"27\",\n    \"15\",\n    \"162\",\n    \"0.254\",\n    \"5532\",\n    \"696\",\n    \"1404\",\n    \"172\",\n    \"819\",\n    \"1491\",\n    \"228\",\n    \"0.266\",\n    \"67\",\n    \"95\",\n    \"6026\",\n    \"4323\",\n    \"1608\",\n    \"95\",\n    \"0.984\"\n  ),\n  insertData(\n    \"Cleveland Indians\",\n    \"CLE\",\n    \"American League\",\n    \"29\",\n    \"12\",\n    \"10\",\n    \"162\",\n    \"0.259\",\n    \"5595\",\n    \"818\",\n    \"1447\",\n    \"216\",\n    \"648\",\n    \"1349\",\n    \"200\",\n    \"0.242\",\n    \"91\",\n    \"71\",\n    \"5808\",\n    \"44372\",\n    \"1353\",\n    \"83\",\n    \"0.986\"\n  ),\n  insertData(\n    \"Colorado Rockies\",\n    \"COL\",\n    \"National League\",\n    \"25\",\n    \"17\",\n    \"4\",\n    \"163\",\n    \"0.256\",\n    \"5541\",\n    \"780\",\n    \"1418\",\n    \"210\",\n    \"745\",\n    \"1377\",\n    \"184\",\n    \"0.25\",\n    \"91\",\n    \"72\",\n    \"6055\",\n    \"4357\",\n    \"1621\",\n    \"74\",\n    \"0.988\"\n  ),\n  insertData(\n    \"Houston Astros\",\n    \"HOU\",\n    \"American League\",\n    \"24\",\n    \"1\",\n    \"1\",\n    \"162\",\n    \"0.255\",\n    \"5453\",\n    \"797\",\n    \"1390\",\n    \"205\",\n    \"534\",\n    \"1164\",\n    \"152\",\n    \"0.217\",\n    \"103\",\n    \"59\",\n    \"5797\",\n    \"4365\",\n    \"1369\",\n    \"63\",\n    \"0.989\"\n  )\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\"\n  },\n  tableWrapper: {\n    maxHeigth: 500,\n    overflow: \"auto\"\n  }\n});\n\nexport default function StickyHeadTable() {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table tableTopFive responsive>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map(row => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                    {columns.map(column => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value == \"number\"\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </div>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 15, 20, 25, 30]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        backIconButtonProps={{\n          \"aria-label\": \"previous page\"\n        }}\n        nextIconButtonProps={{\n          \"aria-label\": \"next page\"\n        }}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}